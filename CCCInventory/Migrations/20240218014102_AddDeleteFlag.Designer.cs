// <auto-generated />
using System;
using CCCInventory.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CCCInventory.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240218014102_AddDeleteFlag")]
    partial class AddDeleteFlag
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CCCInventory.Cake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CakeFlavor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CakeShape")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FillingFlavor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IcingFlavor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumTierLayers")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<bool>("SplitTier")
                        .HasColumnType("bit");

                    b.Property<string>("TierSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderNumber");

                    b.ToTable("Cake");
                });

            modelBuilder.Entity("CCCInventory.Cookie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CookieQuantity")
                        .HasColumnType("int");

                    b.Property<string>("CookieType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderNumber");

                    b.ToTable("Cookie");
                });

            modelBuilder.Entity("CCCInventory.Cupcake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CupcakeFlavor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CupcakeQuantity")
                        .HasColumnType("int");

                    b.Property<string>("CupcakeSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FillingFlavor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IcingFlavor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderNumber");

                    b.ToTable("Cupcake");
                });

            modelBuilder.Entity("CCCInventory.Order", b =>
                {
                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderNumber"));

                    b.Property<bool>("ConfirmationTextSent")
                        .HasColumnType("bit");

                    b.Property<bool>("ContractSent")
                        .HasColumnType("bit");

                    b.Property<string>("CustEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DayOfTextSent")
                        .HasColumnType("bit");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DeliveryLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DepositAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DepositDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepositPaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinalPaymentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FinalPaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitialContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("PaidInFull")
                        .HasColumnType("bit");

                    b.Property<bool?>("PickupOrDelivery")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PickupTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecondaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalCost")
                        .HasColumnType("float");

                    b.HasKey("OrderNumber");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CCCInventory.Pupcake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("PupcakeQuantity")
                        .HasColumnType("int");

                    b.Property<string>("PupcakeSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderNumber");

                    b.ToTable("Pupcake");
                });

            modelBuilder.Entity("CCCInventory.Cake", b =>
                {
                    b.HasOne("CCCInventory.Order", null)
                        .WithMany("Cakes")
                        .HasForeignKey("OrderNumber");
                });

            modelBuilder.Entity("CCCInventory.Cookie", b =>
                {
                    b.HasOne("CCCInventory.Order", null)
                        .WithMany("Cookies")
                        .HasForeignKey("OrderNumber");
                });

            modelBuilder.Entity("CCCInventory.Cupcake", b =>
                {
                    b.HasOne("CCCInventory.Order", null)
                        .WithMany("Cupcakes")
                        .HasForeignKey("OrderNumber");
                });

            modelBuilder.Entity("CCCInventory.Pupcake", b =>
                {
                    b.HasOne("CCCInventory.Order", null)
                        .WithMany("Pupcakes")
                        .HasForeignKey("OrderNumber");
                });

            modelBuilder.Entity("CCCInventory.Order", b =>
                {
                    b.Navigation("Cakes");

                    b.Navigation("Cookies");

                    b.Navigation("Cupcakes");

                    b.Navigation("Pupcakes");
                });
#pragma warning restore 612, 618
        }
    }
}
